/** –ë–∞–∑–æ–≤—ã–π –∫–ª–∞—Å—Å –¥–ª—è –≤—Å–µ—Ö –±–∏—Ä–∂. –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç –æ–±—â–∏–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –∏ –±–∞–∑–æ–≤—É—é —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å */
export default class BaseExchange {
    constructor(exchangeName) {
        this.exchangeName = exchangeName
        this.isConnected = false
        this.connectionStatus = 'disconnected' // 'connecting', 'connected', 'disconnected', 'error'
        this.volumeData = {
            buyVolume: 0,
            sellVolume: 0,
            totalVolume: 0,
            lastPrice: 0,
            timestamp: null,
        }
        this.trades = []
        this.intervalStartTime = null
    }

    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ WebSocket –¥–ª—è –±–∏—Ä–∂–∏. –î–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω –≤ –¥–æ—á–µ—Ä–Ω–∏—Ö –∫–ª–∞—Å—Å–∞—Ö.
     * @returns {Object} –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è WebSocket
     */
    getConfig() {
        throw new Error(
            `getConfig() –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω –≤ ${this.exchangeName}`,
        )
    }

    /**
     * –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Ö–æ–¥—è—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π WebSocket. –î–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω –≤ –¥–æ—á–µ—Ä–Ω–∏—Ö –∫–ª–∞—Å—Å–∞—Ö.
     * @param {Object} data - –î–∞–Ω–Ω—ã–µ –æ—Ç WebSocket
     */
    onMessage(data) {
        throw new Error(
            `onMessage() –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω –≤ ${this.exchangeName}`,
        )
    }

    /** –û–±—Ä–∞–±–æ—Ç–∫–∞ —É—Å–ø–µ—à–Ω–æ–≥–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è */
    onConnect() {
        this.isConnected = true
        this.connectionStatus = 'connected'
        console.log(`‚úÖ [${this.exchangeName}] -> –ø–æ–¥–∫–ª—é—á–µ–Ω–æ`)
    }

    /** –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è @param {Error} error - –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è */
    onError(error) {
        this.isConnected = false
        this.connectionStatus = 'error'
        console.log(`‚ùå [${this.exchangeName}] -> –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–æ`)
        console.error(`–û—à–∏–±–∫–∞ ${this.exchangeName}:`, error.message)
    }

    /** –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è */
    onClose() {
        this.isConnected = false
        this.connectionStatus = 'disconnected'
        console.log(`üîå ${this.exchangeName} -> —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∑–∞–∫—Ä—ã—Ç–æ`)
    }

    /** –ù–∞—á–∞–ª–æ –Ω–æ–≤–æ–≥–æ –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞ —Ä–∞—Å—á–µ—Ç–∞ –æ–±—ä–µ–º–æ–≤ */
    startNewInterval() {
        this.intervalStartTime = Date.now()
        this.volumeData = {
            buyVolume: 0,
            sellVolume: 0,
            totalVolume: 0,
            lastPrice: this.volumeData.lastPrice,
            timestamp: this.intervalStartTime,
        }
        this.trades = []
    }

    /**
     * –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–¥–µ–ª–∫–∏ –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ –æ–±—ä–µ–º–æ–≤.
     * @param {Object} trade - –î–∞–Ω–Ω—ã–µ —Å–¥–µ–ª–∫–∏
     * @param {number} trade.price - –¶–µ–Ω–∞ —Å–¥–µ–ª–∫–∏
     * @param {number} trade.volume - –û–±—ä–µ–º –≤ USD
     * @param {string} trade.side - –°—Ç–æ—Ä–æ–Ω–∞ —Å–¥–µ–ª–∫–∏ ('buy' –∏–ª–∏ 'sell')
     * @param {number} trade.timestamp - –í—Ä–µ–º—è —Å–¥–µ–ª–∫–∏
     */
    addTrade(trade) {
        this.trades.push(trade)
        this.volumeData.lastPrice = trade.price

        if (trade.side === 'buy') {
            this.volumeData.buyVolume += trade.volume
        } else if (trade.side === 'sell') {
            this.volumeData.sellVolume += trade.volume
        }

        this.volumeData.totalVolume =
            this.volumeData.buyVolume + this.volumeData.sellVolume
    }

    /** –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–∏—Ö –¥–∞–Ω–Ω—ã—Ö –ø–æ –æ–±—ä–µ–º–∞–º @returns {Object} –î–∞–Ω–Ω—ã–µ –ø–æ –æ–±—ä–µ–º–∞–º */
    getVolumeData() {
        return {
            ...this.volumeData,
            exchangeName: this.exchangeName,
            connectionStatus: this.connectionStatus,
            tradesCount: this.trades.length,
        }
    }

    /** –ü—Ä–æ–≤–µ—Ä–∫–∞, –Ω—É–∂–µ–Ω –ª–∏ ping –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∞–Ω–∏—è —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è @returns {boolean} true –µ—Å–ª–∏ –Ω—É–∂–µ–Ω ping */
    needsPing() {
        return false // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é ping –Ω–µ –Ω—É–∂–µ–Ω
    }

    /** –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è ping @returns {Object} –°–æ–æ–±—â–µ–Ω–∏–µ ping */
    getPingMessage() {
        return { op: 'ping' }
    }

    /** –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞ ping –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö @returns {number} –ò–Ω—Ç–µ—Ä–≤–∞–ª ping */
    getPingInterval() {
        return 30000 // 30 —Å–µ–∫—É–Ω–¥ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    }
}
